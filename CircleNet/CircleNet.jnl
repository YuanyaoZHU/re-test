# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=3.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(0.75, 0.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseWire(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=2.6)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    0.0, 1.3))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-2', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-2'].BaseWire(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='net')
mdb.models['Model-1'].materials['net'].Density(table=((1120.0, ), ))
mdb.models['Model-1'].materials['net'].Elastic(table=((350000000.0, 0.3), ))
mdb.models['Model-1'].TrussSection(area=4.7124e-05, material='net', name=
    'Section-1')
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(0.0, 0.0, 
    -1.0), direction2=(0.0, 1.0, 0.0), instanceList=('Part-1-1', ), number1=14, 
    number2=1, spacing1=0.1, spacing2=1.5)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-2-1', 
    part=mdb.models['Model-1'].parts['Part-2'])
mdb.models['Model-1'].rootAssembly.rotate(angle=-90.0, axisDirection=(10.0, 
    0.0, 0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Part-2-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-2-1', ), 
    vector=(0.75, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.RadialInstancePattern(axis=(0.0, 0.0, 1.0), 
    instanceList=('Part-2-1', ), number=48, point=(0.75, 0.0, -0.65), 
    totalAngle=360.0)
mdb.models['Model-1'].rootAssembly.deleteFeatures(('Part-2-1-rad-17', 
    'Part-2-1-rad-18', 'Part-2-1-rad-19', 'Part-2-1-rad-20', 'Part-2-1-rad-21', 
    'Part-2-1-rad-22', 'Part-2-1-rad-23', 'Part-2-1-rad-24', 'Part-2-1-rad-25', 
    'Part-2-1-rad-26', 'Part-2-1-rad-27', 'Part-2-1-rad-28', 'Part-2-1-rad-29', 
    'Part-2-1-rad-30', 'Part-2-1-rad-31', 'Part-2-1-rad-32', 'Part-2-1-rad-33', 
    'Part-2-1-rad-34', 'Part-2-1-rad-35', 'Part-2-1-rad-36', 'Part-2-1-rad-37', 
    'Part-2-1-rad-38', 'Part-2-1-rad-39', 'Part-2-1-rad-40', 'Part-2-1-rad-41', 
    'Part-2-1-rad-42', 'Part-2-1-rad-43', 'Part-2-1-rad-44', 'Part-2-1-rad-45', 
    'Part-2-1-rad-46'))
mdb.models['Model-1'].rootAssembly.deleteFeatures(('Part-2-1-rad-47', 
    'Part-2-1-rad-48'))
mdb.models['Model-1'].rootAssembly.deleteFeatures(('Part-2-1-rad-2', 
    'Part-2-1-rad-3', 'Part-2-1-rad-4', 'Part-2-1-rad-5', 'Part-2-1-rad-6', 
    'Part-2-1-rad-7', 'Part-2-1-rad-8', 'Part-2-1-rad-9', 'Part-2-1-rad-10', 
    'Part-2-1-rad-11', 'Part-2-1-rad-12', 'Part-2-1-rad-13', 'Part-2-1-rad-14', 
    'Part-2-1-rad-15', 'Part-2-1-rad-16'))
mdb.models['Model-1'].rootAssembly.RadialInstancePattern(axis=(0.0, 0.0, 1.0), 
    instanceList=('Part-2-1', ), number=48, point=(0.0, 0.0, 0.0), totalAngle=
    360.0)
mdb.models['Model-1'].rootAssembly.InstanceFromBooleanMerge(domain=GEOMETRY, 
    instances=(mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1-lin-2-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1-lin-3-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1-lin-4-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1-lin-5-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1-lin-6-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1-lin-7-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1-lin-8-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1-lin-9-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1-lin-10-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1-lin-11-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1-lin-12-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1-lin-13-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1-lin-14-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-2'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-3'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-4'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-5'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-6'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-7'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-8'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-9'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-10'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-11'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-12'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-13'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-14'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-15'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-16'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-17'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-18'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-19'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-20'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-21'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-22'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-23'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-24'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-25'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-26'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-27'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-28'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-29'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-30'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-31'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-32'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-33'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-34'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-35'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-36'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-37'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-38'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-39'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-40'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-41'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-42'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-43'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-44'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-45'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-46'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-47'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1-rad-48']), name=
    'Part-3', originalInstances=SUPPRESS)
mdb.models['Model-1'].parts['Part-3'].Set(edges=
    mdb.models['Model-1'].parts['Part-3'].edges.getSequenceFromMask((
    '[#ffffffff #ffffff7f #ffff7fff #ff7fffff #fffeffff #ffffffff #f9ffffff', 
    ' #ffffffff:2 #ffffffe7 #ffffffff #ffff9fff #f3ffffff #ffffffff:2 #ffffffe7', 
    ' #ffffffff #ffff3fff #ffffffff #f9ffffff #ffffffff #fffffeff #ffffffff', 
    ' #fffffff9 #ffffffff #fffffe7f #ffffffff #ffff9fff #ff7fffff #3fffffff', 
    ' #ffffffff #ffcfffff #ffffffff #fffff3ff #ffffff7f #fffffff3 #fffffcff', 
    ' #7fff3fff #ffff3fff #fbffffcf #f7bd ]'), ), name='Set-1')
mdb.models['Model-1'].parts['Part-3'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-3'].sets['Set-1'], sectionName=
    'Section-1', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].Material(name='Floater')
mdb.models['Model-1'].materials['Floater'].Density(table=((179.7, ), ))
mdb.models['Model-1'].materials['Floater'].Elastic(table=((3420000.0, 0.3), ))
mdb.models['Model-1'].CircularProfile(name='Profile-1', r=0.015)
mdb.models['Model-1'].BeamSection(consistentMassMatrix=False, integration=
    DURING_ANALYSIS, material='Floater', name='Section-2', poissonRatio=0.0, 
    profile='Profile-1', temperatureVar=LINEAR)
mdb.models['Model-1'].parts['Part-3'].Set(edges=
    mdb.models['Model-1'].parts['Part-3'].edges.getSequenceFromMask((
    '[#0 #80 #8000 #800000 #10000 #0 #6000000', 
    ' #0:2 #18 #0 #6000 #c000000 #0:2 #18', ' #0 #c000 #0 #6000000 #0 #100 #0', 
    ' #6 #0 #180 #0 #6000 #800000 #c0000000', 
    ' #0 #300000 #0 #c00 #80 #c #300', ' #8000c000 #c000 #4000030 #842 ]'), ), 
    name='Set-2')
mdb.models['Model-1'].parts['Part-3'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-3'].sets['Set-2'], sectionName=
    'Section-2', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Part-3'].setElementType(elemTypes=(ElemType(
    elemCode=T3D2, elemLibrary=STANDARD), ), regions=(
    mdb.models['Model-1'].parts['Part-3'].edges.getSequenceFromMask((
    '[#ffffffff #ffffff7f #ffff7fff #ff7fffff #fffeffff #ffffffff #f9ffffff', 
    ' #ffffffff:2 #ffffffe7 #ffffffff #ffff9fff #f3ffffff #ffffffff:2 #ffffffe7', 
    ' #ffffffff #ffff3fff #ffffffff #f9ffffff #ffffffff #fffffeff #ffffffff', 
    ' #fffffff9 #ffffffff #fffffe7f #ffffffff #ffff9fff #ff7fffff #3fffffff', 
    ' #ffffffff #ffcfffff #ffffffff #fffff3ff #ffffff7f #fffffff3 #fffffcff', 
    ' #7fff3fff #ffff3fff #fbffffcf #f7bd ]'), ), ))
mdb.models['Model-1'].parts['Part-3'].setElementType(elemTypes=(ElemType(
    elemCode=B31, elemLibrary=STANDARD), ), regions=(
    mdb.models['Model-1'].parts['Part-3'].edges.getSequenceFromMask((
    '[#0 #80 #8000 #800000 #10000 #0 #6000000', 
    ' #0:2 #18 #0 #6000 #c000000 #0:2 #18', ' #0 #c000 #0 #6000000 #0 #100 #0', 
    ' #6 #0 #180 #0 #6000 #800000 #c0000000', 
    ' #0 #300000 #0 #c00 #80 #c #300', ' #8000c000 #c000 #4000030 #842 ]'), ), 
    ))
mdb.models['Model-1'].parts['Part-3'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].parts['Part-3'].edges.getSequenceFromMask((
    '[#ffffffff #ffffff7f #ffff7fff #ff7fffff #fffeffff #ffffffff #f9ffffff', 
    ' #ffffffff:2 #ffffffe7 #ffffffff #ffff9fff #f3ffffff #ffffffff:2 #ffffffe7', 
    ' #ffffffff #ffff3fff #ffffffff #f9ffffff #ffffffff #fffffeff #ffffffff', 
    ' #fffffff9 #ffffffff #fffffe7f #ffffffff #ffff9fff #ff7fffff #3fffffff', 
    ' #ffffffff #ffcfffff #ffffffff #fffff3ff #ffffff7f #fffffff3 #fffffcff', 
    ' #7fff3fff #ffff3fff #fbffffcf #f7bd ]'), ), number=1)
mdb.models['Model-1'].parts['Part-3'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['Part-3'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, 
    getMemoryFromAnalysis=True, historyPrint=OFF, memory=90, memoryUnits=
    PERCENTAGE, model='Model-1', modelPrint=OFF, multiprocessingMode=DEFAULT, 
    name='Job-1', nodalOutputPrecision=SINGLE, numCpus=1, numDomains=1, 
    numGPUs=0, parallelizationMethodExplicit=DOMAIN, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
mdb.models['Model-1'].parts['Part-3'].assignBeamSectionOrientation(method=
    N1_COSINES, n1=(0.0, 0.0, -1.0), region=
    mdb.models['Model-1'].parts['Part-3'].sets['Set-2'])
# Save by uu on 2023_06_24-14.46.50; build 2021 2020_03_06-22.50.37 167380
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.engineeringFeatures.SpringDashpotToGround(
    dashpotBehavior=OFF, dashpotCoefficient=0.0, dof=1, name=
    'Springs/Dashpots-1', orientation=None, region=Region(
    vertices=mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].vertices.getSequenceFromMask(
    mask=('[#0:8 #20000 ]', ), )), springBehavior=ON, springStiffness=44.0)
mdb.models['Model-1'].rootAssembly.engineeringFeatures.SpringDashpotToGround(
    dashpotBehavior=OFF, dashpotCoefficient=0.0, dof=1, name=
    'Springs/Dashpots-2', orientation=None, region=Region(
    vertices=mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].vertices.getSequenceFromMask(
    mask=('[#0:17 #80000 ]', ), )), springBehavior=ON, springStiffness=44.0)
mdb.models['Model-1'].rootAssembly.Set(name='Set-3', vertices=
    mdb.models['Model-1'].rootAssembly.instances['Part-3-1'].vertices.getSequenceFromMask(
    ('[#0:9 #800000 #0:10 #20000000 ]', ), ))
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BC-1', 
    region=mdb.models['Model-1'].rootAssembly.sets['Set-3'], u1=UNSET, u2=SET, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
# Save by uu on 2023_06_24-15.02.13; build 2021 2020_03_06-22.50.37 167380
# Save by uu on 2023_06_24-15.27.43; build 2021 2020_03_06-22.50.37 167380
